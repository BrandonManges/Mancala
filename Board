

/* Tracking and Printing the mancala board
 * Brandon Manges
 * 8 March 2021
 * First, take care of basic board layout
 */
import java.util.Locale;
import java.util.Random;
import java.util.Scanner;

public class Board {
    private int[] board = {4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 0};
    private char[] lables = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N'};
    Scanner input = new Scanner(System.in);

    private void printSolidLine(int dots, boolean newLine) {
        for (int i = 0; i < dots; i++) {
            System.out.print('*');
        }
        if (newLine) System.out.println();
    }

    private void printDottedLine(int dots, boolean newLine) {
        for (int i = 0; i < dots; i++) {
            System.out.print("*    ");
        }
        if (newLine) System.out.println();
    }

    private void printTopPlayer() {
        for (int i = 13; i > 6; i--) {
            System.out.printf("*  %c ", lables[i]);
        }
        printDottedLine(1, false);
        printSolidLine(1, true);
        for (int i = 13; i > 6; i--) {
            System.out.printf("* %2d ", board[i]);
        }
        printDottedLine(1, false);
        printSolidLine(1, true);
    }

    private void printBottomPlayer() {
        printDottedLine(1, false);
        for (int i = 0; i <= 6; i++) {
            System.out.printf("* %2d ", board[i]);
        }
        printSolidLine(1, true);
        printDottedLine(1, false);
        for (int i = 0; i <= 6; i++) {
            System.out.printf("*  %c ", lables[i]);
        }
        printSolidLine(1, true);
    }


    public void printBoard() {
        printSolidLine(41, true);
        printDottedLine(8, false);
        printSolidLine(1, true);
        printTopPlayer();
        printDottedLine(8, false);
        printSolidLine(1, true);
        printSolidLine(41, true);
        printDottedLine(8, false);
        printSolidLine(1, true);
        printBottomPlayer();
        printDottedLine(8, false);
        printSolidLine(1, true);
        printSolidLine(41, true);
    }

    int findIndex(char c) {
        int retVal = 20;
        for(int i = 0 ; i < 14 ; i++) {
            if (c == lables[i]) {
                retVal = i;
                break;
            }
        }
        return retVal;
    }

    int makeMove(Player p ) {
        Random random = new Random();
        int retVal = 0;
        char choose;

        boolean loop = true;
        int pos;
        do{
            System.out.print(p.getName() +  ", choose from pits " + lables[p.getStart()] +
                    " to " + lables[p.getEnd()]+ ": ");
            choose = input.next().toUpperCase().charAt(0);
             pos = findIndex(choose);
            if(pos >= p.getStart() && pos <= p.getEnd() && board[pos] > 0) {
                loop = false;
            } else {
                System.out.println("Please enter a valid input.");
            }
        }while(loop);

        int stones = board[pos];
        board[pos] = 0;

        while(stones > 0){
            pos++;
            if(pos >= 14){
                pos = 0;
            } else if(p.getPlayer() == 1 && pos == 13) pos = 0;
            else if(p.getPlayer() == 2 && pos == 6 ) pos = 7;
            board[pos]++;
            stones--;
        }
        



        retVal = random.nextInt(3);
        System.out.println("The random number being returned is: " + retVal);
        return retVal;
    }
}
